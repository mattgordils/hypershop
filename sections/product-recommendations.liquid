<div class="px-margin overflow-hidden {{ section.settings.section_margin }}">
  <product-recommendations class="product-recommendations" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4">
    {% if recommendations.performed and recommendations.products_count > 0 %}
      <h2 class="h3 mb-v-space-sm">{{ section.settings.heading | escape }}</h2>
      <ul class="hidden lg:grid grid-cols-4 gap-x-gutter" role="list">
        {%- if recommendations.products.size > 0 -%}
          {% for recommendation in recommendations.products %}
            <li>
              {% render 'product_card', card_product: recommendation, section_id: section.id %}
            </li>
          {% endfor %}
        {% else %}
          {% for recommendation in (1..4) %}
            <li>
              {% render 'product_card', card_product: recommendation, section_id: section.id %}
            </li>
          {% endfor %}
        {% endif %}
      </ul>

      <div class="w-full lg:hidden">
        <ul
          class="slick-slider recommendations progress-dots slide-gap slick-visible-overflow"
          role="list"
        >
          {%- if recommendations.products.size > 0 -%}
            {% for recommendation in recommendations.products %}
              <li>
                {% render 'product_card', card_product: recommendation, section_id: section.id %}
              </li>
            {% endfor %}
          {% else %}
            {% for recommendation in (1..4) %}
              <li>
                {% render 'product_card', card_product: recommendation, section_id: section.id %}
              </li>
            {% endfor %}
          {% endif %}
        </ul>
      </div>
    {% endif %}
  </product-recommendations>
</div>

{% javascript %}
  class ProductRecommendations extends HTMLElement {
    constructor() {
      super();

      const handleIntersection = (entries, observer) => {
        if (!entries[0].isIntersecting) return;
        observer.unobserve(this);

        fetch(this.dataset.url)
          .then(response => response.text())
          .then(text => {
            const html = document.createElement('div');
            html.innerHTML = text;
            const recommendations = html.querySelector('product-recommendations');

            if (recommendations && recommendations.innerHTML.trim().length) {
              this.innerHTML = recommendations.innerHTML;
              if(window.lazyload) window.lazyload();
            }

            if (html.querySelector('.slick-slider.recommendations')) {
              this.classList.add('product-recommendations--loaded');
              $('.slick-slider.recommendations').slick().on('beforeChange', function(event, slick, currentSlide, nextSlide) {
                $(this).css({ '--progress': nextSlide });
              });
            }
          })
          .catch(e => {
            console.error(e);
          });
      }

      new IntersectionObserver(handleIntersection.bind(this), {rootMargin: '0px 0px 200px 0px'}).observe(this);
    }
  }

  customElements.define('product-recommendations', ProductRecommendations);
{% endjavascript %}

{% schema %}
{
  "name": "Product Recommendations",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "Uses the Shopify generated recommended products"
    },
    {
      "type": "text",
      "id": "heading",
      "default": "Shop Similar",
      "label": "Headline"
    },
    {
      "type": "select",
      "id": "section_margin",
      "default": "mb-v-space",
      "label": "Section Margin",
      "info": "This can be used to adjust or remove the space below this section",
      "options": [
        {
          "label": "none",
          "value": "mb-0"
        },
        {
          "label": "Small",
          "value": "mb-12 md:mb-margin"
        },
        {
          "label": "Medium",
          "value": "mb-v-space-sm"
        },
        {
          "label": "Large",
          "value": "mb-v-space"
        }
      ]
    }
  ]
}
{% endschema %}
