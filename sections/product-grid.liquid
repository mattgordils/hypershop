{% capture spacing_class %}
  {% render 'util-section-spacing' with space: section.settings.section_spacing %}
{% endcapture %}

{%-liquid
  assign show_filters = true
  assign section_collection = section.settings.collection | default: collection

  if section.settings.products != blank
    assign section_collection = section.settings
  endif
-%}

{% if section_collection.products.size > 0 %}
  <{% if show_filters %}collection-grid{% else %}div{% endif %}
    id="collectionItems"
    class="block px-margin {{ spacing_class }}"
    data-url="{{ collection.url }}"
    data-section-id="{{ section.id }}"
  >
    {% if show_filters %}
      <div class="mb-gutter">
        {% if section_collection.products.size > 0 %}
            <span class="text-light-text-color"> {{ section_collection.products.size }} Items </span>
          {% endif %}

        {% if collection.sort_options.size > 0 %}
          <div id="sortItems" class="relative z-10 inline-block align-top">
              <button id="sortTrigger" class="h6 flex items-center justify-end gap-1 group">
              <span class="border-b border-dashed border-hr-color transition group-hover:border-text-color">
                Sort By
                {% for option in collection.sort_options %}
                  {% if option.value == collection.sort_by %}
                    {{ option.name }}
                  {% endif %}
                {% endfor %}
              </span>
              <span class="icon block -mt-[2px] transition">
                {% render 'icon_material' with icon: 'keyboard_arrow_down', class: 'block' %}
              </span>
            </button>
            <ul
              id="sortList"
              class="hidden absolute top-[calc(100%+10px)] left-0 bg-bg flex flex-col items-start justify-start border border-hr-color pl-4 pr-8 py-3"
            >
              {% for option in collection.sort_options %}
                <li class="filter-item">
                  <label
                    class="cursor-pointer body py-[.1em] flex items-start justify-center gap-x-2 whitespace-nowrap"
                    for="{{ option.value }}"
                  >
                    <input
                      class="hidden peer"
                      name="sort_by"
                      type="radio"
                      value="{{ option.value }}"
                      id="{{ option.value }}"
                      {% if option.value == collection.sort_by %}
                        checked
                      {% endif %}
                    >
                    <div class="text-transparent peer-checked:text-current shrink-0 whitespace-nowrap flex items-center justify-center mt-[.24em] w-[10px] h-[10px] rounded-full bg-hr-color">
                      <div class="marker w-[6px] h-[6px] rounded-full bg-current"></div>
                    </div>
                    {{ option.name }}
                  </label>
                </li>
              {% endfor %}
            </ul>
          </div>
        {% endif %}

        {% render 'filters' %}
      </div>
    {% endif %}

    <div class="max-w-site-max-w mx-auto">
      <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-x-gutter gap-y-v-space-sm">
        {% for product in section_collection.products %}
          <div>
            {% render 'product_card' with product: product %}
          </div>
        {% endfor %}
      </div>
    </div>
  </{% if show_filters %}collection-grid{% else %}div{% endif %}>
{% endif %}

{% schema %}
{
  "name": "Product Grid",
  "tag": "section",
  "class": "section-product-grid",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection",
    },
    {
      "type": "product_list",
      "id": "products",
      "label": "Products",
      "info": "This will override the selected collection"
    },
		{
      "type": "select",
      "id": "section_spacing",
      "default": "medium",
      "label": "Section Spacing",
      "info": "This can be used to adjust or remove the space below this section",
      "options": [
        {
          "label": "None",
          "value": "none"
        },
        {
          "label": "Small",
          "value": "small"
        },
        {
          "label": "Medium",
          "value": "medium"
        },
        {
          "label": "Large",
          "value": "large"
        }
      ]
    }
	],
  "presets": [
    {
      "name": "Product Grid"
    }
  ]
}
{% endschema %}

