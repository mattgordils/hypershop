/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/entrypoints/cart.js":
/*!*********************************!*\
  !*** ./src/entrypoints/cart.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   refreshCart: () => (/* binding */ refreshCart)\n/* harmony export */ });\nconst refreshCart = (fullRefresh = false) => {\n  const cartDrawer = document.querySelector(\"#shopify-section-cart #cartContent\");\n  if (!cartDrawer) {\n    return false;\n  }\n  fetch(window.Shopify.routes.root + \"?sections=cart\").then((res) => res.json()).then((res) => {\n    const currentCartDrawer = document.querySelector(\"#shopify-section-cart #cartContent\");\n    const currentCartHeader = document.querySelector(\"#shopify-section-cart #cartHeader\");\n    var el = document.createElement(\"div\");\n    el.innerHTML = res[\"cart\"];\n    const oldCartCount = document.querySelector(\"#shopify-section-cart #cartHeader\").dataset.cartCount;\n    const newCartCount = el.querySelector(\"#cartHeader\").dataset.cartCount;\n    const oldlineCount = document.querySelectorAll(\"#shopify-section-cart #cartLineItem\")?.length;\n    const newlineCount = el.querySelectorAll(\"#shopify-section-cart #cartLineItem\")?.length;\n    if (newCartCount == 0 || oldCartCount == 0 || oldlineCount !== newlineCount) {\n      fullRefresh = true;\n    }\n    if (fullRefresh) {\n      const cartContent = el.querySelector(\"#cartContent\");\n      currentCartDrawer.outerHTML = cartContent.outerHTML;\n    } else {\n      const updateItems = document.querySelectorAll(\"#shopify-section-cart #cartUpdate\");\n      const updatedItems = el.querySelectorAll(\"#shopify-section-cart #cartUpdate\");\n      updateItems.forEach((item, index) => {\n        item.innerHTML = updatedItems[index].innerHTML;\n      });\n    }\n    const cartCountItems = document.querySelectorAll(\"#cartCount\");\n    cartCountItems.forEach((item) => {\n      item.innerHTML = newCartCount;\n    });\n  });\n};\nif (!customElements.get(\"cart-remove-item\")) {\n  customElements.define(\n    \"cart-remove-item\",\n    class CartRemoveItem extends HTMLElement {\n      constructor() {\n        super();\n        this.cartRemoveButton = this.querySelector(\".cart-remove-item\");\n        this.cartRemoveButton.addEventListener(\"click\", (event) => {\n          let formData = {\n            updates: {\n              [event.currentTarget.dataset.itemId]: 0\n            }\n          };\n          if (event.currentTarget.dataset.itemId.includes(\", \")) {\n            const variantIds = event?.currentTarget?.dataset?.itemId.split(\", \")?.filter((item) => item !== \"\");\n            const updatesObj = {};\n            if (variantIds.length > 0) {\n              variantIds.forEach((id) => {\n                updatesObj[id] = 0;\n              });\n            }\n            formData = {\n              updates: updatesObj\n            };\n          }\n          fetch(window.Shopify.routes.root + \"cart/update.js\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(formData)\n          }).then((data) => {\n            refreshCart(true);\n          }).catch((error) => {\n            console.error(\"Error:\", error);\n          });\n        });\n      }\n    }\n  );\n}\nif (!customElements.get(\"cart-quantity-adjust\")) {\n  customElements.define(\n    \"cart-quantity-adjust\",\n    class QuantityAdjust extends HTMLElement {\n      constructor() {\n        super();\n        this.quantityChangeButtons = this.querySelectorAll(\".quantity-change\");\n        this.onQuantityChangeButtonClick = this.onQuantityChangeButtonClick.bind(this);\n        this.quantityChangeButtons.forEach((quantityChangeButton) => {\n          quantityChangeButton.onclick = this.onQuantityChangeButtonClick;\n        });\n      }\n      onQuantityChangeButtonClick(event) {\n        const quantityChangeButton = event.currentTarget;\n        this.getQuantityDivFromChangeButton(quantityChangeButton).classList.add(\n          \"opacity-0\"\n        );\n        const itemId = parseInt(\n          quantityChangeButton.getAttribute(\"data-product-id\")\n        );\n        const itemQuantity = parseInt(\n          quantityChangeButton.getAttribute(\"data-new-quantity\")\n        );\n        let formData = {\n          updates: {\n            [itemId]: itemQuantity\n          }\n        };\n        let successHandler = (response) => {\n          const parent = quantityChangeButton.parentElement;\n          this.getQuantityDivFromChangeButton(quantityChangeButton).innerHTML = itemQuantity;\n          this.getQuantityDivFromChangeButton(\n            quantityChangeButton\n          ).classList.remove(\"opacity-0\");\n          const decreaseQuantityButton = parent.querySelector(\".quantity-down\");\n          decreaseQuantityButton.setAttribute(\n            \"data-new-quantity\",\n            itemQuantity - 1\n          );\n          const increaseQuantityButton = parent.querySelector(\".quantity-up\");\n          increaseQuantityButton.setAttribute(\n            \"data-new-quantity\",\n            itemQuantity + 1\n          );\n          return response.json();\n        };\n        successHandler = successHandler.bind(quantityChangeButton);\n        fetch(window.Shopify.routes.root + \"cart/update.js\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData)\n        }).then((data) => successHandler(data)).then((data) => {\n          refreshCart();\n          document.querySelectorAll(\".cart-item-count\").forEach((element) => {\n            element.innerHTML = data.item_count;\n          });\n        }).catch((error) => {\n          console.error(\"Error:\", error);\n        });\n      }\n      getQuantityDivFromChangeButton(buttonDiv) {\n        const parent = buttonDiv.parentElement;\n        return parent.querySelector(\".quantity-current\");\n      }\n    }\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/entrypoints/cart.js\n\n}");

/***/ }),

/***/ "./src/entrypoints/collapsible.js":
/*!****************************************!*\
  !*** ./src/entrypoints/collapsible.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toggleCollapsibleItem: () => (/* binding */ toggleCollapsibleItem)\n/* harmony export */ });\nconst toggleCollapsibleItem = (content, icon, expand) => {\n  if (expand === \"inherit\") {\n    expand = content.ariaHidden === \"true\";\n  }\n  if (expand) {\n    content.ariaHidden = \"false\";\n    icon.dataset.icon = \"minus\";\n  } else {\n    content.ariaHidden = \"true\";\n    icon.dataset.icon = \"plus\";\n  }\n};\nif (!customElements.get(\"collapsible-item\")) {\n  customElements.define(\n    \"collapsible-item\",\n    class collapsibleItem extends HTMLElement {\n      constructor() {\n        super();\n        this.trigger = this.querySelectorAll('[data-collapsible=\"trigger\"]');\n        this.content = this.querySelector('[data-collapsible=\"content\"]');\n        this.icon = this.querySelector('[data-collapsible=\"icon\"] .animated-icon');\n        this.content.ariaHidden = \"true\";\n        this.trigger.forEach((item) => {\n          item.addEventListener(\"click\", (event) => {\n            toggleCollapsibleItem(this.content, this.icon, \"inherit\");\n          });\n        });\n      }\n    }\n  );\n}\nif (!customElements.get(\"accordion-list\")) {\n  customElements.define(\n    \"accordion-list\",\n    class accordionList extends HTMLElement {\n      constructor() {\n        super();\n        this.trigger = this.querySelectorAll('[data-collapsible=\"trigger\"]');\n        this.content = this.querySelectorAll('[data-collapsible=\"content\"]');\n        this.collapsibleItems = this.querySelectorAll(\"collapsible-item\");\n        if (this.dataset.initialOpen) {\n          const item = this.collapsibleItems[this.dataset.initialOpen];\n          const content = item.querySelector('[data-collapsible=\"content\"]');\n          const icon = item.querySelector('[data-collapsible=\"icon\"] .animated-icon');\n          toggleCollapsibleItem(content, icon, true);\n        }\n        this.trigger.forEach((item) => {\n          item.addEventListener(\"click\", (event) => {\n            const parent = item.closest(\"collapsible-item\");\n            this.collapsibleItems.forEach((item2) => {\n              const content = item2.querySelector('[data-collapsible=\"content\"]');\n              const icon = item2.querySelector('[data-collapsible=\"icon\"] .animated-icon');\n              if (item2.id !== parent.id) {\n                toggleCollapsibleItem(content, icon, false);\n              }\n            });\n          });\n        });\n      }\n    }\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZW50cnlwb2ludHMvY29sbGFwc2libGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU0sd0JBQXdCLENBQUMsU0FBUyxNQUFNLFdBQVc7QUFFOUQsTUFBSSxXQUFXLFdBQVc7QUFDeEIsYUFBUyxRQUFRLGVBQWU7QUFBQSxFQUNsQztBQUVBLE1BQUksUUFBUTtBQUNWLFlBQVEsYUFBYTtBQUNyQixTQUFLLFFBQVEsT0FBTztBQUFBLEVBQ3RCLE9BQU87QUFDTCxZQUFRLGFBQWE7QUFDckIsU0FBSyxRQUFRLE9BQU87QUFBQSxFQUN0QjtBQUNGO0FBRUEsSUFBSSxDQUFDLGVBQWUsSUFBSSxrQkFBa0IsR0FBRztBQUMzQyxpQkFBZTtBQUFBLElBQ2I7QUFBQSxJQUNBLE1BQU0sd0JBQXdCLFlBQVk7QUFBQSxNQUN4QyxjQUFjO0FBQ1osY0FBTTtBQUVOLGFBQUssVUFBVSxLQUFLLGlCQUFpQiw4QkFBOEI7QUFDbkUsYUFBSyxVQUFVLEtBQUssY0FBYyw4QkFBOEI7QUFDaEUsYUFBSyxPQUFPLEtBQUssY0FBYywwQ0FBMEM7QUFFekUsYUFBSyxRQUFRLGFBQWE7QUFFMUIsYUFBSyxRQUFRLFFBQVEsVUFBUTtBQUMzQixlQUFLLGlCQUFpQixTQUFTLFdBQVM7QUFDdEMsa0NBQXNCLEtBQUssU0FBUyxLQUFLLE1BQU0sU0FBUztBQUFBLFVBQzFELENBQUM7QUFBQSxRQUNILENBQUM7QUFBQSxNQUNIO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFDRjtBQUVBLElBQUksQ0FBQyxlQUFlLElBQUksZ0JBQWdCLEdBQUc7QUFDekMsaUJBQWU7QUFBQSxJQUNiO0FBQUEsSUFDQSxNQUFNLHNCQUFzQixZQUFZO0FBQUEsTUFDdEMsY0FBYztBQUNaLGNBQU07QUFFTixhQUFLLFVBQVUsS0FBSyxpQkFBaUIsOEJBQThCO0FBQ25FLGFBQUssVUFBVSxLQUFLLGlCQUFpQiw4QkFBOEI7QUFDbkUsYUFBSyxtQkFBbUIsS0FBSyxpQkFBaUIsa0JBQWtCO0FBRWhFLFlBQUksS0FBSyxRQUFRLGFBQWE7QUFDNUIsZ0JBQU0sT0FBTyxLQUFLLGlCQUFpQixLQUFLLFFBQVEsV0FBVztBQUMzRCxnQkFBTSxVQUFVLEtBQUssY0FBYyw4QkFBOEI7QUFDakUsZ0JBQU0sT0FBTyxLQUFLLGNBQWMsMENBQTBDO0FBQzFFLGdDQUFzQixTQUFTLE1BQU0sSUFBSTtBQUFBLFFBQzNDO0FBRUEsYUFBSyxRQUFRLFFBQVEsVUFBUTtBQUMzQixlQUFLLGlCQUFpQixTQUFTLFdBQVM7QUFDdEMsa0JBQU0sU0FBUyxLQUFLLFFBQVEsa0JBQWtCO0FBQzlDLGlCQUFLLGlCQUFpQixRQUFRLENBQUFBLFVBQVE7QUFDcEMsb0JBQU0sVUFBVUEsTUFBSyxjQUFjLDhCQUE4QjtBQUNqRSxvQkFBTSxPQUFPQSxNQUFLLGNBQWMsMENBQTBDO0FBQzFFLGtCQUFJQSxNQUFLLE9BQU8sT0FBTyxJQUFJO0FBRXpCLHNDQUFzQixTQUFTLE1BQU0sS0FBSztBQUFBLGNBQzVDO0FBQUEsWUFDRixDQUFDO0FBQUEsVUFDSCxDQUFDO0FBQUEsUUFDSCxDQUFDO0FBQUEsTUFDSDtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaG9waWZ5LXN0YXJ0ZXIvLi9zcmMvZW50cnlwb2ludHMvY29sbGFwc2libGUuanM/YmRlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdG9nZ2xlQ29sbGFwc2libGVJdGVtID0gKGNvbnRlbnQsIGljb24sIGV4cGFuZCkgPT4ge1xuICAvLyBVc2UgYXJlYUhpZGRlbiB0byB0b2dnbGUgdmlzaWJpbGl0eVxuICBpZiAoZXhwYW5kID09PSAnaW5oZXJpdCcpIHtcbiAgICBleHBhbmQgPSBjb250ZW50LmFyaWFIaWRkZW4gPT09ICd0cnVlJ1xuICB9XG4gIC8vXG4gIGlmIChleHBhbmQpIHtcbiAgICBjb250ZW50LmFyaWFIaWRkZW4gPSAnZmFsc2UnXG4gICAgaWNvbi5kYXRhc2V0Lmljb24gPSAnbWludXMnXG4gIH0gZWxzZSB7XG4gICAgY29udGVudC5hcmlhSGlkZGVuID0gJ3RydWUnXG4gICAgaWNvbi5kYXRhc2V0Lmljb24gPSAncGx1cydcbiAgfVxufVxuXG5pZiAoIWN1c3RvbUVsZW1lbnRzLmdldChcImNvbGxhcHNpYmxlLWl0ZW1cIikpIHtcbiAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKFxuICAgIFwiY29sbGFwc2libGUtaXRlbVwiLFxuICAgIGNsYXNzIGNvbGxhcHNpYmxlSXRlbSBleHRlbmRzIEhUTUxFbGVtZW50IHtcbiAgICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICAvL1xuICAgICAgICB0aGlzLnRyaWdnZXIgPSB0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWNvbGxhcHNpYmxlPVwidHJpZ2dlclwiXScpXG4gICAgICAgIHRoaXMuY29udGVudCA9IHRoaXMucXVlcnlTZWxlY3RvcignW2RhdGEtY29sbGFwc2libGU9XCJjb250ZW50XCJdJylcbiAgICAgICAgdGhpcy5pY29uID0gdGhpcy5xdWVyeVNlbGVjdG9yKCdbZGF0YS1jb2xsYXBzaWJsZT1cImljb25cIl0gLmFuaW1hdGVkLWljb24nKVxuXG4gICAgICAgIHRoaXMuY29udGVudC5hcmlhSGlkZGVuID0gJ3RydWUnXG5cbiAgICAgICAgdGhpcy50cmlnZ2VyLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGV2ZW50ID0+IHtcbiAgICAgICAgICAgIHRvZ2dsZUNvbGxhcHNpYmxlSXRlbSh0aGlzLmNvbnRlbnQsIHRoaXMuaWNvbiwgJ2luaGVyaXQnKVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfVxuICApXG59XG5cbmlmICghY3VzdG9tRWxlbWVudHMuZ2V0KFwiYWNjb3JkaW9uLWxpc3RcIikpIHtcbiAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKFxuICAgIFwiYWNjb3JkaW9uLWxpc3RcIixcbiAgICBjbGFzcyBhY2NvcmRpb25MaXN0IGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICAgICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIC8vXG4gICAgICAgIHRoaXMudHJpZ2dlciA9IHRoaXMucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtY29sbGFwc2libGU9XCJ0cmlnZ2VyXCJdJylcbiAgICAgICAgdGhpcy5jb250ZW50ID0gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1jb2xsYXBzaWJsZT1cImNvbnRlbnRcIl0nKVxuICAgICAgICB0aGlzLmNvbGxhcHNpYmxlSXRlbXMgPSB0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoJ2NvbGxhcHNpYmxlLWl0ZW0nKVxuXG4gICAgICAgIGlmICh0aGlzLmRhdGFzZXQuaW5pdGlhbE9wZW4pIHtcbiAgICAgICAgICBjb25zdCBpdGVtID0gdGhpcy5jb2xsYXBzaWJsZUl0ZW1zW3RoaXMuZGF0YXNldC5pbml0aWFsT3Blbl1cbiAgICAgICAgICBjb25zdCBjb250ZW50ID0gaXRlbS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1jb2xsYXBzaWJsZT1cImNvbnRlbnRcIl0nKVxuICAgICAgICAgIGNvbnN0IGljb24gPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWNvbGxhcHNpYmxlPVwiaWNvblwiXSAuYW5pbWF0ZWQtaWNvbicpXG4gICAgICAgICAgdG9nZ2xlQ29sbGFwc2libGVJdGVtKGNvbnRlbnQsIGljb24sIHRydWUpXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnRyaWdnZXIuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZXZlbnQgPT4ge1xuICAgICAgICAgICAgY29uc3QgcGFyZW50ID0gaXRlbS5jbG9zZXN0KCdjb2xsYXBzaWJsZS1pdGVtJylcbiAgICAgICAgICAgIHRoaXMuY29sbGFwc2libGVJdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gaXRlbS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1jb2xsYXBzaWJsZT1cImNvbnRlbnRcIl0nKVxuICAgICAgICAgICAgICBjb25zdCBpY29uID0gaXRlbS5xdWVyeVNlbGVjdG9yKCdbZGF0YS1jb2xsYXBzaWJsZT1cImljb25cIl0gLmFuaW1hdGVkLWljb24nKVxuICAgICAgICAgICAgICBpZiAoaXRlbS5pZCAhPT0gcGFyZW50LmlkKSB7XG4gICAgICAgICAgICAgICAgLy8gQ2xvc2Ugb3RoZXIgaXRlbXNcbiAgICAgICAgICAgICAgICB0b2dnbGVDb2xsYXBzaWJsZUl0ZW0oY29udGVudCwgaWNvbiwgZmFsc2UpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9XG4gIClcbn0iXSwibmFtZXMiOlsiaXRlbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/entrypoints/collapsible.js\n\n}");

/***/ }),

/***/ "./src/entrypoints/eventbus.js":
/*!*************************************!*\
  !*** ./src/entrypoints/eventbus.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EventBus)\n/* harmony export */ });\nclass EventBus {\n  // Initialize a new event bus instance.\n  constructor() {\n    this.bus = document.createElement(\"event-bus\");\n  }\n  // Add an event listener.\n  addEventListener(event, callback) {\n    this.bus.addEventListener(event, callback);\n  }\n  /**\n   * Remove an event listener.\n   */\n  removeEventListener(event, callback) {\n    this.bus.removeEventListener(event, callback);\n  }\n  // Dispatch an event.\n  dispatchEvent(event, detail = {}) {\n    this.bus.dispatchEvent(new CustomEvent(event, { detail }));\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZW50cnlwb2ludHMvZXZlbnRidXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLE1BQU0sU0FBUztBQUFBO0FBQUEsRUFFNUIsY0FBYztBQUNaLFNBQUssTUFBTSxTQUFTLGNBQWMsV0FBVztBQUFBLEVBQy9DO0FBQUE7QUFBQSxFQUdBLGlCQUFpQixPQUFPLFVBQVU7QUFDaEMsU0FBSyxJQUFJLGlCQUFpQixPQUFPLFFBQVE7QUFBQSxFQUMzQztBQUFBO0FBQUE7QUFBQTtBQUFBLEVBS0Esb0JBQW9CLE9BQU8sVUFBVTtBQUNuQyxTQUFLLElBQUksb0JBQW9CLE9BQU8sUUFBUTtBQUFBLEVBQzlDO0FBQUE7QUFBQSxFQUdBLGNBQWMsT0FBTyxTQUFTLENBQUMsR0FBRztBQUNoQyxTQUFLLElBQUksY0FBYyxJQUFJLFlBQVksT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQUEsRUFDM0Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3Nob3BpZnktc3RhcnRlci8uL3NyYy9lbnRyeXBvaW50cy9ldmVudGJ1cy5qcz8xMDYxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIEV2ZW50QnVzIHtcbiAgLy8gSW5pdGlhbGl6ZSBhIG5ldyBldmVudCBidXMgaW5zdGFuY2UuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuYnVzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZXZlbnQtYnVzJyk7XG4gIH1cblxuICAvLyBBZGQgYW4gZXZlbnQgbGlzdGVuZXIuXG4gIGFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGNhbGxiYWNrKSB7XG4gICAgdGhpcy5idXMuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgY2FsbGJhY2spO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBhbiBldmVudCBsaXN0ZW5lci5cbiAgICovXG4gIHJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGNhbGxiYWNrKSB7XG4gICAgdGhpcy5idXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgY2FsbGJhY2spO1xuICB9XG5cbiAgLy8gRGlzcGF0Y2ggYW4gZXZlbnQuXG4gIGRpc3BhdGNoRXZlbnQoZXZlbnQsIGRldGFpbCA9IHt9KSB7XG4gICAgdGhpcy5idXMuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoZXZlbnQsIHsgZGV0YWlsIH0pKTtcbiAgfVxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/entrypoints/eventbus.js\n\n}");

/***/ }),

/***/ "./src/entrypoints/global.js":
/*!***********************************!*\
  !*** ./src/entrypoints/global.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   docReady: () => (/* binding */ docReady),\n/* harmony export */   getSelectedOptions: () => (/* binding */ getSelectedOptions),\n/* harmony export */   getVariant: () => (/* binding */ getVariant)\n/* harmony export */ });\n/* harmony import */ var _styles_main_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles/main.scss */ \"./src/styles/main.scss\");\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modal */ \"./src/entrypoints/modal.js\");\n/* harmony import */ var _cart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cart */ \"./src/entrypoints/cart.js\");\n/* harmony import */ var _collapsible__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./collapsible */ \"./src/entrypoints/collapsible.js\");\n/* harmony import */ var _inView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./inView */ \"./src/entrypoints/inView.js\");\n/* harmony import */ var _inView__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_inView__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"\\n\\u2554    \\u2557  Site by STUDIO HYPERLINK\\n\\u2551 \\u2560\\u2563 \\u2551  www.studiohyper.link\\n\\u255A    \\u255D  Hot Bagels, Hotter Websites\\n \");\n});\nfunction isMobileOrTablet() {\n  const ua = navigator.userAgent;\n  if (/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(ua)) {\n    return true;\n  } else if (/Mobile|Android|iP(hone|od)|IEMobile|BlackBerry|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(\n    ua\n  )) {\n    return true;\n  }\n  return false;\n}\nconst docReady = (fn) => {\n  if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n    setTimeout(fn, 1);\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", fn);\n  }\n};\ndocReady(() => {\n  const windowHeight = window.innerHeight;\n  if (isMobileOrTablet()) {\n    document.body.style.setProperty(\"--vh\", `${windowHeight * 0.01}px`);\n  }\n});\nconst arraysEqual = (a, b) => {\n  if (a === b)\n    return true;\n  if (a == null || b == null)\n    return false;\n  if (a.length !== b.length)\n    return false;\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i])\n      return false;\n  }\n  return true;\n};\nconst getVariant = (selected, variantData) => {\n  const currentVariant = variantData.find((variant) => {\n    return arraysEqual(variant.options, selected);\n  });\n  return currentVariant;\n};\nconst getSelectedOptions = (productOptions) => {\n  const selectedOptions = [];\n  productOptions.forEach((option) => {\n    if (option.querySelector(\"select\")) {\n      const selectElement = option.querySelector(\"select\");\n      selectedOptions.push(selectElement.value);\n    } else if (option.checked) {\n      selectedOptions.push(option.value);\n    }\n  });\n  return selectedOptions;\n};\nif (!customElements.get(\"add-to-cart-form\")) {\n  customElements.define(\n    \"add-to-cart-form\",\n    class AddToCartForm extends HTMLElement {\n      constructor() {\n        super();\n        this.init();\n        const productContainer = this.closest(\"[data-product-update]\");\n        if (productContainer) {\n          productContainer.addEventListener(\"section:updated\", () => {\n            this.init();\n          });\n        }\n      }\n      init() {\n        this.addButton = this.querySelector(\".add-to-cart-btn\");\n        this.qtyInput = this.querySelector(\"input[data-input='qty']\");\n        if (!this.addButton) {\n          return void 0;\n        }\n        if (this.handleClick) {\n          this.addButton.removeEventListener(\"click\", this.handleClick);\n        }\n        this.handleClick = (event) => {\n          event.preventDefault();\n          const productOptions = this.querySelectorAll(\"variant-radios input, variant-selects\");\n          const selectedOptions = getSelectedOptions(productOptions);\n          const subscription = this.querySelector(\".rc-widget .rc-selling-plans select.rc-selling-plans-dropdown__select\");\n          const propertiesInputs = this.querySelectorAll('[name^=\"property_\"]');\n          console.log(\"propertiesInputs: \", propertiesInputs);\n          let properties = {};\n          if (propertiesInputs?.length > 0) {\n            propertiesInputs.forEach((prop) => {\n              let title = \"\";\n              let value = false;\n              if (prop?.dataset?.title) {\n                title = prop.dataset.title;\n              }\n              if (prop.type === \"fieldset\") {\n                const checkedItems = prop.querySelectorAll(\"input\");\n                const checkedValues = [];\n                checkedItems.forEach((item) => {\n                  if (item.checked) {\n                    checkedValues.push(item.value);\n                  }\n                });\n                value = checkedValues.join(\", \");\n              } else {\n                value = prop.dataset.value || prop.value;\n              }\n              if (value) {\n                properties[title] = value;\n              }\n            });\n          }\n          console.log(\"properties: \", properties);\n          let variantId = \"\";\n          let variantData = \"\";\n          if (this?.dataset?.variantId) {\n            variantId = this.dataset.variantId;\n          } else {\n            variantData = JSON.parse(this.querySelector('[type=\"application/json\"]').textContent);\n            variantId = getVariant(selectedOptions, variantData).id;\n          }\n          let formData = {\n            items: [\n              {\n                id: variantId,\n                selling_plan: subscription?.value || null,\n                quantity: this.qtyInput?.value || 1,\n                properties\n              }\n            ]\n          };\n          fetch(window.Shopify.routes.root + \"cart/add.js\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(formData)\n          }).then((data) => {\n            console.log(data);\n            (0,_cart__WEBPACK_IMPORTED_MODULE_2__.refreshCart)();\n          }).then(() => {\n            (0,_modal__WEBPACK_IMPORTED_MODULE_1__.openModal)(\"cartDrawer\");\n          }).catch((error) => {\n            console.error(\"Error:\", error);\n          });\n        };\n        this.addButton.addEventListener(\"click\", this.handleClick);\n      }\n    }\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/entrypoints/global.js\n\n}");

/***/ }),

/***/ "./src/entrypoints/inView.js":
/*!***********************************!*\
  !*** ./src/entrypoints/inView.js ***!
  \***********************************/
/***/ (() => {

eval("{if (!customElements.get(\"in-view\")) {\n  customElements.define(\n    \"in-view\",\n    class inView extends HTMLElement {\n      constructor() {\n        super();\n        const observer = new IntersectionObserver((item) => {\n          const inViewItem = item[0];\n          if (inViewItem.isIntersecting) {\n            this.classList.add(\"in-view\");\n          }\n        }, {\n          threshold: 0.1\n        });\n        observer.observe(this);\n      }\n    }\n  );\n}\nif (!customElements.get(\"parallax-view\")) {\n  customElements.define(\n    \"parallax-view\",\n    class parallaxView extends HTMLElement {\n      constructor() {\n        super();\n        this.observer = new IntersectionObserver((item) => {\n          const inViewItem = item[0];\n          if (inViewItem.isIntersecting) {\n            console.log(inViewItem.intersectionRatio);\n            this.classList.add(\"in-view\");\n          }\n          console.log(inViewItem.intersectionRatio);\n        }, {\n          threshold: 0.5\n        });\n      }\n      connectedCallback() {\n        this.onScrollHandler = this.onScroll.bind(this);\n        window.addEventListener(\"scroll\", this.onScrollHandler, false);\n      }\n      onScroll() {\n        const element = this;\n        const viewportHeight = window.innerHeight;\n        const scrollTop = window.scrollY;\n        const elementOffsetTop = element.offsetTop;\n        const percentage = Math.round((scrollTop + viewportHeight - elementOffsetTop) / (viewportHeight + element.offsetHeight) * 100);\n        if (percentage >= 0 && percentage <= 100) {\n          this.style.cssText = \"--percentage: \" + percentage / 100;\n        }\n      }\n    }\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaG9waWZ5LXN0YXJ0ZXIvLi9zcmMvZW50cnlwb2ludHMvaW5WaWV3LmpzPzNkNWMiXSwic291cmNlc0NvbnRlbnQiOlsiaWYgKCFjdXN0b21FbGVtZW50cy5nZXQoXCJpbi12aWV3XCIpKSB7XG4gIGN1c3RvbUVsZW1lbnRzLmRlZmluZShcbiAgICBcImluLXZpZXdcIixcbiAgICBjbGFzcyBpblZpZXcgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gICAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgLy9cbiAgICAgICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoaXRlbSA9PiB7XG4gICAgICAgICAgY29uc3QgaW5WaWV3SXRlbSA9IGl0ZW1bMF1cbiAgICAgICAgICBpZiAoaW5WaWV3SXRlbS5pc0ludGVyc2VjdGluZykge1xuICAgICAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdpbi12aWV3Jyk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCB7XG4gICAgICAgICAgdGhyZXNob2xkOiAuMVxuICAgICAgICB9KTtcblxuICAgICAgICBvYnNlcnZlci5vYnNlcnZlKHRoaXMpXG4gICAgICAgIFxuICAgICAgfVxuXG4gICAgICBcbiAgICB9XG4gICk7XG59XG5cbmlmICghY3VzdG9tRWxlbWVudHMuZ2V0KFwicGFyYWxsYXgtdmlld1wiKSkge1xuICBjdXN0b21FbGVtZW50cy5kZWZpbmUoXG4gICAgXCJwYXJhbGxheC12aWV3XCIsXG4gICAgY2xhc3MgcGFyYWxsYXhWaWV3IGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICAgICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIC8vXG4gICAgICAgIHRoaXMub2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoaXRlbSA9PiB7XG4gICAgICAgICAgY29uc3QgaW5WaWV3SXRlbSA9IGl0ZW1bMF1cbiAgICAgICAgICBpZiAoaW5WaWV3SXRlbS5pc0ludGVyc2VjdGluZykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coaW5WaWV3SXRlbS5pbnRlcnNlY3Rpb25SYXRpbylcbiAgICAgICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnaW4tdmlldycpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zb2xlLmxvZyhpblZpZXdJdGVtLmludGVyc2VjdGlvblJhdGlvKVxuICAgICAgICB9LCB7XG4gICAgICAgICAgdGhyZXNob2xkOiAuNVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICAgIHRoaXMub25TY3JvbGxIYW5kbGVyID0gdGhpcy5vblNjcm9sbC5iaW5kKHRoaXMpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5vblNjcm9sbEhhbmRsZXIsIGZhbHNlKTtcbiAgICAgIH1cblxuICAgICAgb25TY3JvbGwoKSB7XG4gICAgICAgIC8vIEdldCB0aGUgZWxlbWVudFxuICAgICAgICBjb25zdCBlbGVtZW50ID0gdGhpc1xuXG4gICAgICAgIC8vIEdldCB0aGUgdmlld3BvcnQgaGVpZ2h0XG4gICAgICAgIGNvbnN0IHZpZXdwb3J0SGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuXG4gICAgICAgIC8vIEdldCB0aGUgc2Nyb2xsIHRvcFxuICAgICAgICBjb25zdCBzY3JvbGxUb3AgPSB3aW5kb3cuc2Nyb2xsWTtcblxuICAgICAgICAvLyBHZXQgdGhlIGVsZW1lbnQgb2Zmc2V0IHRvcFxuICAgICAgICBjb25zdCBlbGVtZW50T2Zmc2V0VG9wID0gZWxlbWVudC5vZmZzZXRUb3A7XG5cbiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBwZXJjZW50YWdlIG9mIHRoZSBlbGVtZW50IHRoYXQncyBpbiB2aWV3XG4gICAgICAgIGNvbnN0IHBlcmNlbnRhZ2UgPSBNYXRoLnJvdW5kKChzY3JvbGxUb3AgKyB2aWV3cG9ydEhlaWdodCAtIGVsZW1lbnRPZmZzZXRUb3ApIC8gKHZpZXdwb3J0SGVpZ2h0ICsgZWxlbWVudC5vZmZzZXRIZWlnaHQpICogMTAwKTtcblxuICAgICAgICBpZiAocGVyY2VudGFnZSA+PSAwICYmIHBlcmNlbnRhZ2UgPD0gMTAwKSB7XG4gICAgICAgICAgdGhpcy5zdHlsZS5jc3NUZXh0ID0gXCItLXBlcmNlbnRhZ2U6IFwiICsgcGVyY2VudGFnZSAvIDEwMFxuICAgICAgICB9XG5cbiAgICAgIH0gXG4gICAgfVxuICApO1xufSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSSxDQUFDLGVBQWUsSUFBSSxTQUFTLEdBQUc7QUFDbEMsaUJBQWU7QUFBQSxJQUNiO0FBQUEsSUFDQSxNQUFNLGVBQWUsWUFBWTtBQUFBLE1BQy9CLGNBQWM7QUFDWixjQUFNO0FBRU4sY0FBTSxXQUFXLElBQUkscUJBQXFCLFVBQVE7QUFDaEQsZ0JBQU0sYUFBYSxLQUFLLENBQUM7QUFDekIsY0FBSSxXQUFXLGdCQUFnQjtBQUM3QixpQkFBSyxVQUFVLElBQUksU0FBUztBQUFBLFVBQzlCO0FBQUEsUUFDRixHQUFHO0FBQUEsVUFDRCxXQUFXO0FBQUEsUUFDYixDQUFDO0FBRUQsaUJBQVMsUUFBUSxJQUFJO0FBQUEsTUFFdkI7QUFBQSxJQUdGO0FBQUEsRUFDRjtBQUNGO0FBRUEsSUFBSSxDQUFDLGVBQWUsSUFBSSxlQUFlLEdBQUc7QUFDeEMsaUJBQWU7QUFBQSxJQUNiO0FBQUEsSUFDQSxNQUFNLHFCQUFxQixZQUFZO0FBQUEsTUFDckMsY0FBYztBQUNaLGNBQU07QUFFTixhQUFLLFdBQVcsSUFBSSxxQkFBcUIsVUFBUTtBQUMvQyxnQkFBTSxhQUFhLEtBQUssQ0FBQztBQUN6QixjQUFJLFdBQVcsZ0JBQWdCO0FBQzdCLG9CQUFRLElBQUksV0FBVyxpQkFBaUI7QUFDeEMsaUJBQUssVUFBVSxJQUFJLFNBQVM7QUFBQSxVQUM5QjtBQUNBLGtCQUFRLElBQUksV0FBVyxpQkFBaUI7QUFBQSxRQUMxQyxHQUFHO0FBQUEsVUFDRCxXQUFXO0FBQUEsUUFDYixDQUFDO0FBQUEsTUFDSDtBQUFBLE1BRUEsb0JBQW9CO0FBQ2xCLGFBQUssa0JBQWtCLEtBQUssU0FBUyxLQUFLLElBQUk7QUFDOUMsZUFBTyxpQkFBaUIsVUFBVSxLQUFLLGlCQUFpQixLQUFLO0FBQUEsTUFDL0Q7QUFBQSxNQUVBLFdBQVc7QUFFVCxjQUFNLFVBQVU7QUFHaEIsY0FBTSxpQkFBaUIsT0FBTztBQUc5QixjQUFNLFlBQVksT0FBTztBQUd6QixjQUFNLG1CQUFtQixRQUFRO0FBR2pDLGNBQU0sYUFBYSxLQUFLLE9BQU8sWUFBWSxpQkFBaUIscUJBQXFCLGlCQUFpQixRQUFRLGdCQUFnQixHQUFHO0FBRTdILFlBQUksY0FBYyxLQUFLLGNBQWMsS0FBSztBQUN4QyxlQUFLLE1BQU0sVUFBVSxtQkFBbUIsYUFBYTtBQUFBLFFBQ3ZEO0FBQUEsTUFFRjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQ0Y7IiwibmFtZXMiOltdLCJmaWxlIjoiLi9zcmMvZW50cnlwb2ludHMvaW5WaWV3LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/entrypoints/inView.js\n\n}");

/***/ }),

/***/ "./src/entrypoints/modal.js":
/*!**********************************!*\
  !*** ./src/entrypoints/modal.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeModal: () => (/* binding */ closeModal),\n/* harmony export */   openModal: () => (/* binding */ openModal)\n/* harmony export */ });\n/* harmony import */ var _eventbus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventbus */ \"./src/entrypoints/eventbus.js\");\n\nwindow.EventBus = new _eventbus__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\nconst setModalState = (event) => {\n  const activeModal = document.querySelector(\"modal-component#\" + event.detail);\n  if (activeModal) {\n    if (activeModal.classList.contains(\"open\")) {\n      return;\n    } else {\n      activeModal.classList.add(\"open\", \"animating\");\n      activeModal.classList.add(\"animating\");\n    }\n  } else {\n    const modals = document.querySelectorAll(\"modal-component\");\n    modals.forEach((modal) => {\n      modal.classList.remove(\"open\");\n      modal.classList.add(\"animating\");\n      setTimeout(() => {\n        modal.classList.remove(\"animating\");\n      }, 500);\n    });\n  }\n};\nwindow.EventBus.addEventListener(\"setModal\", setModalState);\nconst closeModal = (id) => {\n  let body = document.querySelector(\"body\");\n  window.EventBus.dispatchEvent(\"setModal\", \"false\");\n};\nconst openModal = (id) => {\n  if (id) {\n    window.EventBus.dispatchEvent(\"setModal\", id);\n  }\n};\nclass Modal extends HTMLElement {\n  constructor() {\n    super();\n    this.isOpen = false;\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n  connectedCallback() {\n    this.setAttribute(\"role\", \"dialog\");\n    this.setAttribute(\"aria-modal\", \"true\");\n    this.addEventListener(\"click\", (e) => {\n      if (e.target === this) {\n        this.close();\n      }\n    });\n    this.focusableElements = this.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n  }\n  open() {\n    this.isOpen = true;\n    this.classList.add(\"open\", \"animating\");\n    document.body.style.overflow = \"hidden\";\n    document.addEventListener(\"keydown\", this.onKeyDown);\n    const firstFocusable = this.focusableElements[0];\n    if (firstFocusable) {\n      firstFocusable.focus();\n    }\n  }\n  close() {\n    this.isOpen = false;\n    this.classList.remove(\"open\");\n    this.classList.add(\"animating\");\n    document.body.style.overflow = \"\";\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n    setTimeout(() => {\n      this.classList.remove(\"animating\");\n    }, 500);\n  }\n  onKeyDown(e) {\n    if (e.key === \"Escape\") {\n      this.close();\n    }\n    if (e.key === \"Tab\") {\n      const firstFocusable = this.focusableElements[0];\n      const lastFocusable = this.focusableElements[this.focusableElements.length - 1];\n      if (e.shiftKey && document.activeElement === firstFocusable) {\n        e.preventDefault();\n        lastFocusable.focus();\n      } else if (!e.shiftKey && document.activeElement === lastFocusable) {\n        e.preventDefault();\n        firstFocusable.focus();\n      }\n    }\n  }\n}\nif (!customElements.get(\"modal-component\")) {\n  customElements.define(\"modal-component\", Modal);\n}\nclass ModalTrigger extends HTMLElement {\n  constructor() {\n    super();\n    this.addEventListener(\"click\", () => {\n      const modalId = this.dataset.modalId;\n      if (modalId) {\n        openModal(modalId);\n      } else {\n        closeModal();\n      }\n    });\n  }\n}\nif (!customElements.get(\"modal-trigger\")) {\n  customElements.define(\"modal-trigger\", ModalTrigger);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZW50cnlwb2ludHMvbW9kYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFCO0FBQ3JCLE9BQU8sV0FBVyxJQUFJLGlEQUFRO0FBRTlCLE1BQU0sZ0JBQWdCLENBQUMsVUFBVTtBQUMvQixRQUFNLGNBQWMsU0FBUyxjQUFjLHFCQUFxQixNQUFNLE1BQU07QUFDNUUsTUFBSSxhQUFhO0FBQ2YsUUFBSSxZQUFZLFVBQVUsU0FBUyxNQUFNLEdBQUc7QUFFMUM7QUFBQSxJQUNGLE9BQU87QUFDTCxrQkFBWSxVQUFVLElBQUksUUFBUSxXQUFXO0FBQzdDLGtCQUFZLFVBQVUsSUFBSSxXQUFXO0FBQUEsSUFDdkM7QUFBQSxFQUNGLE9BQU87QUFDTCxVQUFNLFNBQVMsU0FBUyxpQkFBaUIsaUJBQWlCO0FBQzFELFdBQU8sUUFBUSxXQUFTO0FBQ3RCLFlBQU0sVUFBVSxPQUFPLE1BQU07QUFDN0IsWUFBTSxVQUFVLElBQUksV0FBVztBQUMvQixpQkFBVyxNQUFNO0FBQ2YsY0FBTSxVQUFVLE9BQU8sV0FBVztBQUFBLE1BQ3BDLEdBQUcsR0FBRztBQUFBLElBQ1IsQ0FBQztBQUFBLEVBQ0g7QUFDRjtBQUVBLE9BQU8sU0FBUyxpQkFBaUIsWUFBWSxhQUFhO0FBRW5ELE1BQU0sYUFBYSxRQUFNO0FBQzlCLE1BQUksT0FBTyxTQUFTLGNBQWMsTUFBTTtBQUN4QyxTQUFPLFNBQVMsY0FBYyxZQUFZLE9BQU87QUFDbkQ7QUFFTyxNQUFNLFlBQVksUUFBTTtBQUM3QixNQUFJLElBQUk7QUFDTixXQUFPLFNBQVMsY0FBYyxZQUFZLEVBQUU7QUFBQSxFQUM5QztBQUNGO0FBRUEsTUFBTSxjQUFjLFlBQVk7QUFBQSxFQUM5QixjQUFjO0FBQ1osVUFBTTtBQUNOLFNBQUssU0FBUztBQUNkLFNBQUssWUFBWSxLQUFLLFVBQVUsS0FBSyxJQUFJO0FBQUEsRUFDM0M7QUFBQSxFQUVBLG9CQUFvQjtBQUNsQixTQUFLLGFBQWEsUUFBUSxRQUFRO0FBQ2xDLFNBQUssYUFBYSxjQUFjLE1BQU07QUFHdEMsU0FBSyxpQkFBaUIsU0FBUyxDQUFDLE1BQU07QUFDcEMsVUFBSSxFQUFFLFdBQVcsTUFBTTtBQUNyQixhQUFLLE1BQU07QUFBQSxNQUNiO0FBQUEsSUFDRixDQUFDO0FBR0QsU0FBSyxvQkFBb0IsS0FBSztBQUFBLE1BQzVCO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFBQSxFQUVBLE9BQU87QUFDTCxTQUFLLFNBQVM7QUFDZCxTQUFLLFVBQVUsSUFBSSxRQUFRLFdBQVc7QUFDdEMsYUFBUyxLQUFLLE1BQU0sV0FBVztBQUMvQixhQUFTLGlCQUFpQixXQUFXLEtBQUssU0FBUztBQUduRCxVQUFNLGlCQUFpQixLQUFLLGtCQUFrQixDQUFDO0FBQy9DLFFBQUksZ0JBQWdCO0FBQ2xCLHFCQUFlLE1BQU07QUFBQSxJQUN2QjtBQUFBLEVBQ0Y7QUFBQSxFQUVBLFFBQVE7QUFDTixTQUFLLFNBQVM7QUFDZCxTQUFLLFVBQVUsT0FBTyxNQUFNO0FBQzVCLFNBQUssVUFBVSxJQUFJLFdBQVc7QUFDOUIsYUFBUyxLQUFLLE1BQU0sV0FBVztBQUMvQixhQUFTLG9CQUFvQixXQUFXLEtBQUssU0FBUztBQUV0RCxlQUFXLE1BQU07QUFDZixXQUFLLFVBQVUsT0FBTyxXQUFXO0FBQUEsSUFDbkMsR0FBRyxHQUFHO0FBQUEsRUFDUjtBQUFBLEVBRUEsVUFBVSxHQUFHO0FBQ1gsUUFBSSxFQUFFLFFBQVEsVUFBVTtBQUN0QixXQUFLLE1BQU07QUFBQSxJQUNiO0FBR0EsUUFBSSxFQUFFLFFBQVEsT0FBTztBQUNuQixZQUFNLGlCQUFpQixLQUFLLGtCQUFrQixDQUFDO0FBQy9DLFlBQU0sZ0JBQWdCLEtBQUssa0JBQWtCLEtBQUssa0JBQWtCLFNBQVMsQ0FBQztBQUU5RSxVQUFJLEVBQUUsWUFBWSxTQUFTLGtCQUFrQixnQkFBZ0I7QUFDM0QsVUFBRSxlQUFlO0FBQ2pCLHNCQUFjLE1BQU07QUFBQSxNQUN0QixXQUFXLENBQUMsRUFBRSxZQUFZLFNBQVMsa0JBQWtCLGVBQWU7QUFDbEUsVUFBRSxlQUFlO0FBQ2pCLHVCQUFlLE1BQU07QUFBQSxNQUN2QjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQ0Y7QUFFQSxJQUFJLENBQUMsZUFBZSxJQUFJLGlCQUFpQixHQUFHO0FBQzFDLGlCQUFlLE9BQU8sbUJBQW1CLEtBQUs7QUFDaEQ7QUFFQSxNQUFNLHFCQUFxQixZQUFZO0FBQUEsRUFDckMsY0FBYztBQUNaLFVBQU07QUFFTixTQUFLLGlCQUFpQixTQUFTLE1BQU07QUFDbkMsWUFBTSxVQUFVLEtBQUssUUFBUTtBQUM3QixVQUFJLFNBQVM7QUFDWCxrQkFBVSxPQUFPO0FBQUEsTUFDbkIsT0FBTztBQUNMLG1CQUFXO0FBQUEsTUFDYjtBQUFBLElBQ0YsQ0FBQztBQUFBLEVBQ0g7QUFDRjtBQUVBLElBQUksQ0FBQyxlQUFlLElBQUksZUFBZSxHQUFHO0FBQ3hDLGlCQUFlLE9BQU8saUJBQWlCLFlBQVk7QUFDckQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaG9waWZ5LXN0YXJ0ZXIvLi9zcmMvZW50cnlwb2ludHMvbW9kYWwuanM/NzVlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXZlbnRCdXMgZnJvbSAnLi9ldmVudGJ1cyc7XG53aW5kb3cuRXZlbnRCdXMgPSBuZXcgRXZlbnRCdXM7XG5cbmNvbnN0IHNldE1vZGFsU3RhdGUgPSAoZXZlbnQpID0+IHtcbiAgY29uc3QgYWN0aXZlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtb2RhbC1jb21wb25lbnQjJyArIGV2ZW50LmRldGFpbClcbiAgaWYgKGFjdGl2ZU1vZGFsKSB7XG4gICAgaWYgKGFjdGl2ZU1vZGFsLmNsYXNzTGlzdC5jb250YWlucygnb3BlbicpKSB7XG4gICAgICAvLyBEbyBub3RoaW5nIGlmIG1vZGFsIGlzIGFscmVhZHkgb3BlblxuICAgICAgcmV0dXJuXG4gICAgfSBlbHNlIHtcbiAgICAgIGFjdGl2ZU1vZGFsLmNsYXNzTGlzdC5hZGQoJ29wZW4nLCAnYW5pbWF0aW5nJylcbiAgICAgIGFjdGl2ZU1vZGFsLmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGluZycpXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGNvbnN0IG1vZGFscyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ21vZGFsLWNvbXBvbmVudCcpO1xuICAgIG1vZGFscy5mb3JFYWNoKG1vZGFsID0+IHtcbiAgICAgIG1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoJ29wZW4nKVxuICAgICAgbW9kYWwuY2xhc3NMaXN0LmFkZCgnYW5pbWF0aW5nJylcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBtb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdhbmltYXRpbmcnKVxuICAgICAgfSwgNTAwKVxuICAgIH0pXG4gIH1cbn1cblxud2luZG93LkV2ZW50QnVzLmFkZEV2ZW50TGlzdGVuZXIoJ3NldE1vZGFsJywgc2V0TW9kYWxTdGF0ZSlcblxuZXhwb3J0IGNvbnN0IGNsb3NlTW9kYWwgPSBpZCA9PiB7XG4gIGxldCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIik7XG4gIHdpbmRvdy5FdmVudEJ1cy5kaXNwYXRjaEV2ZW50KFwic2V0TW9kYWxcIiwgXCJmYWxzZVwiKVxufVxuXG5leHBvcnQgY29uc3Qgb3Blbk1vZGFsID0gaWQgPT4ge1xuICBpZiAoaWQpIHtcbiAgICB3aW5kb3cuRXZlbnRCdXMuZGlzcGF0Y2hFdmVudChcInNldE1vZGFsXCIsIGlkKVxuICB9XG59XG5cbmNsYXNzIE1vZGFsIGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuaXNPcGVuID0gZmFsc2U7XG4gICAgdGhpcy5vbktleURvd24gPSB0aGlzLm9uS2V5RG93bi5iaW5kKHRoaXMpO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnZGlhbG9nJyk7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ2FyaWEtbW9kYWwnLCAndHJ1ZScpO1xuXG4gICAgLy8gQ2xvc2Ugb24gb3V0c2lkZSBjbGlja1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgaWYgKGUudGFyZ2V0ID09PSB0aGlzKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIFRyYXAgZm9jdXMgd2hlbiBtb2RhbCBpcyBvcGVuXG4gICAgdGhpcy5mb2N1c2FibGVFbGVtZW50cyA9IHRoaXMucXVlcnlTZWxlY3RvckFsbChcbiAgICAgICdidXR0b24sIFtocmVmXSwgaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEsIFt0YWJpbmRleF06bm90KFt0YWJpbmRleD1cIi0xXCJdKSdcbiAgICApO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLmlzT3BlbiA9IHRydWU7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdvcGVuJywgJ2FuaW1hdGluZycpO1xuICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5vbktleURvd24pO1xuXG4gICAgLy8gRm9jdXMgZmlyc3QgZm9jdXNhYmxlIGVsZW1lbnRcbiAgICBjb25zdCBmaXJzdEZvY3VzYWJsZSA9IHRoaXMuZm9jdXNhYmxlRWxlbWVudHNbMF07XG4gICAgaWYgKGZpcnN0Rm9jdXNhYmxlKSB7XG4gICAgICBmaXJzdEZvY3VzYWJsZS5mb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuaXNPcGVuID0gZmFsc2U7XG4gICAgdGhpcy5jbGFzc0xpc3QucmVtb3ZlKCdvcGVuJyk7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdhbmltYXRpbmcnKTtcbiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gJyc7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMub25LZXlEb3duKTtcblxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5jbGFzc0xpc3QucmVtb3ZlKCdhbmltYXRpbmcnKTtcbiAgICB9LCA1MDApO1xuICB9XG5cbiAgb25LZXlEb3duKGUpIHtcbiAgICBpZiAoZS5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuXG4gICAgLy8gVHJhcCBmb2N1c1xuICAgIGlmIChlLmtleSA9PT0gJ1RhYicpIHtcbiAgICAgIGNvbnN0IGZpcnN0Rm9jdXNhYmxlID0gdGhpcy5mb2N1c2FibGVFbGVtZW50c1swXTtcbiAgICAgIGNvbnN0IGxhc3RGb2N1c2FibGUgPSB0aGlzLmZvY3VzYWJsZUVsZW1lbnRzW3RoaXMuZm9jdXNhYmxlRWxlbWVudHMubGVuZ3RoIC0gMV07XG5cbiAgICAgIGlmIChlLnNoaWZ0S2V5ICYmIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IGZpcnN0Rm9jdXNhYmxlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgbGFzdEZvY3VzYWJsZS5mb2N1cygpO1xuICAgICAgfSBlbHNlIGlmICghZS5zaGlmdEtleSAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSBsYXN0Rm9jdXNhYmxlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZmlyc3RGb2N1c2FibGUuZm9jdXMoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuaWYgKCFjdXN0b21FbGVtZW50cy5nZXQoJ21vZGFsLWNvbXBvbmVudCcpKSB7XG4gIGN1c3RvbUVsZW1lbnRzLmRlZmluZSgnbW9kYWwtY29tcG9uZW50JywgTW9kYWwpO1xufVxuXG5jbGFzcyBNb2RhbFRyaWdnZXIgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgY29uc3QgbW9kYWxJZCA9IHRoaXMuZGF0YXNldC5tb2RhbElkXG4gICAgICBpZiAobW9kYWxJZCkge1xuICAgICAgICBvcGVuTW9kYWwobW9kYWxJZClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNsb3NlTW9kYWwoKVxuICAgICAgfVxuICAgIH0pXG4gIH1cbn1cblxuaWYgKCFjdXN0b21FbGVtZW50cy5nZXQoJ21vZGFsLXRyaWdnZXInKSkge1xuICBjdXN0b21FbGVtZW50cy5kZWZpbmUoJ21vZGFsLXRyaWdnZXInLCBNb2RhbFRyaWdnZXIpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/entrypoints/modal.js\n\n}");

/***/ }),

/***/ "./src/entrypoints/variantSelects.js":
/*!*******************************************!*\
  !*** ./src/entrypoints/variantSelects.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global */ \"./src/entrypoints/global.js\");\n\nclass VariantSelects extends HTMLElement {\n  constructor() {\n    super();\n    this.addEventListener(\"change\", this.onVariantChange);\n    this.isPDP = this.dataset.context === \"PDP\";\n    if (this.isPDP && !this.isReinitialization()) {\n      this.init();\n    }\n  }\n  /**\n   * Check if this is a re-initialization after section re-render\n   * If URL has variant param, we just re-rendered and shouldn't init again\n   */\n  isReinitialization() {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.has(\"variant\");\n  }\n  /**\n   * Initialize on page load\n   * Gets current variant and syncs URL (PDP only)\n   */\n  init() {\n    this.updateCurrentVariant();\n    if (this.currentVariant) {\n      this.updateURL();\n    }\n  }\n  /**\n   * Handle variant option change (user interaction)\n   * Main entry point for variant updates\n   */\n  onVariantChange() {\n    this.updateCurrentVariant();\n    if (!this.currentVariant) {\n      return;\n    }\n    const variantId = this.currentVariant.id;\n    if (this.isPDP) {\n      this.updateURL();\n      this.updateSection(variantId);\n    } else {\n      this.updateSection(variantId);\n    }\n  }\n  /**\n   * Determine currently selected variant\n   * Reads all option selections and matches against variant data\n   */\n  updateCurrentVariant() {\n    const form = this.closest(\"add-to-cart-form\");\n    if (!form) {\n      return;\n    }\n    const jsonScript = form.querySelector('[type=\"application/json\"]');\n    if (!jsonScript) {\n      return;\n    }\n    const variantData = JSON.parse(jsonScript.textContent);\n    const selectedOptions = this.getSelectedOptions(form);\n    this.currentVariant = (0,_global__WEBPACK_IMPORTED_MODULE_0__.getVariant)(selectedOptions, variantData);\n  }\n  /**\n   * Extract selected option values from form\n   * Handles both select dropdowns and radio buttons\n   */\n  getSelectedOptions(form) {\n    const selectedOptions = [];\n    const variantSelects = form.querySelectorAll(\"variant-selects select\");\n    variantSelects.forEach((select) => {\n      selectedOptions.push(select.value);\n    });\n    const variantRadioGroups = form.querySelectorAll(\"variant-radios fieldset\");\n    variantRadioGroups.forEach((fieldset) => {\n      const checkedRadio = fieldset.querySelector('input[type=\"radio\"]:checked');\n      if (checkedRadio) {\n        selectedOptions.push(checkedRadio.value);\n      }\n    });\n    return selectedOptions;\n  }\n  /**\n   * Build availability map for option values\n   * Based on the current variant selections, determines which option values\n   * have at least one available variant\n   */\n  buildAvailabilityMap(variants, currentVariant) {\n    const map = {};\n    const currentOptions = currentVariant.options;\n    for (let position = 0; position < currentOptions.length; position++) {\n      const uniqueValues = [...new Set(variants.map((v) => v.options[position]))];\n      uniqueValues.forEach((value) => {\n        const mapKey = `${position + 1}-${value}`;\n        const hasAvailableVariant = variants.some((variant) => {\n          if (!variant.available)\n            return false;\n          if (variant.options[position] !== value)\n            return false;\n          for (let i = 0; i < currentOptions.length; i++) {\n            if (i === position)\n              continue;\n            if (variant.options[i] !== currentOptions[i]) {\n              return false;\n            }\n          }\n          return true;\n        });\n        map[mapKey] = hasAvailableVariant;\n      });\n    }\n    return map;\n  }\n  /**\n   * Update browser URL with variant parameter\n   * PDP only - keeps URL in sync with selection\n   */\n  updateURL() {\n    if (!this.isPDP || !this.currentVariant)\n      return;\n    const productUrl = this.dataset.url || this.closest(\"[data-url]\")?.dataset.url;\n    if (!productUrl)\n      return;\n    const url = `${productUrl}?variant=${this.currentVariant.id}`;\n    window.history.replaceState({}, \"\", url);\n  }\n  /**\n   * Re-render product content via Shopify page fetch\n   *\n   * Strategy:\n   * 1. Fetch full product page with new variant\n   * 2. Parse HTML to find matching section\n   * 3. Replace only [data-dynamic-content] elements\n   * 4. Preserves wrapper/scripts to avoid event listener loss\n   */\n  updateSection(variantId) {\n    if (!variantId)\n      return;\n    const containerElement = this.closest(\"[data-product-update]\");\n    if (!containerElement) {\n      return;\n    }\n    const updateId = containerElement.dataset.productUpdate || \"\";\n    const section = this.closest(\".shopify-section\");\n    if (!section)\n      return;\n    const sectionId = section.id.replace(\"shopify-section-\", \"\");\n    if (!sectionId)\n      return;\n    const fetchUrl = this.buildFetchURL(variantId, sectionId);\n    if (!fetchUrl)\n      return;\n    this.fetchAndReplace(fetchUrl, section, containerElement, updateId, sectionId);\n  }\n  /**\n   * Build URL to fetch updated content\n   * Both PDP and Cards use Sections API for optimized performance\n   *\n   * Uses Sections API when available for better performance (smaller payload)\n   */\n  buildFetchURL(variantId, sectionId) {\n    if (this.isPDP) {\n      return `${window.location.pathname}?variant=${variantId}&sections=${sectionId}`;\n    } else {\n      const productUrl = this.dataset.url || this.closest(\"[data-url]\")?.dataset.url;\n      return productUrl ? `${productUrl}.js` : null;\n    }\n  }\n  /**\n   * Fetch page and replace content\n   * PDP: Fetches section HTML and replaces dynamic content\n   * Cards: Fetches product JSON and updates image/price/button\n   */\n  fetchAndReplace(fetchUrl, section, containerElement, updateId, sectionId) {\n    if (!this.isPDP) {\n      const form = this.closest(\"add-to-cart-form\");\n      const jsonScript = form.querySelector('[type=\"application/json\"]');\n      if (!jsonScript) {\n        console.error(\"Could not find variant data JSON in card\");\n        return;\n      }\n      const variantData = JSON.parse(jsonScript.textContent);\n      console.log(\"Variant data from page:\", variantData);\n      console.log(\"Current variant:\", this.currentVariant);\n      const selectedVariant = variantData.find((v) => v.id === this.currentVariant.id);\n      if (!selectedVariant) {\n        console.error(\"Could not find selected variant in variant data\");\n        return;\n      }\n      console.log(\"Selected variant:\", selectedVariant);\n      if (selectedVariant.featured_image) {\n        const imgElement = containerElement.querySelector(\"img\");\n        if (imgElement) {\n          const width = imgElement.getAttribute(\"width\") || 640;\n          const height = imgElement.getAttribute(\"height\");\n          let targetWidth = 640;\n          let targetHeight;\n          if (height) {\n            const ratio = width / height;\n            targetHeight = Math.round(targetWidth / ratio);\n          } else {\n            targetHeight = Math.round(targetWidth / 0.75);\n          }\n          const imageUrl = selectedVariant.featured_image.src;\n          const sizedImageUrl = imageUrl.replace(/\\.(jpg|jpeg|png|gif|webp)/i, `_${targetWidth}x${targetHeight}_crop_center.$1`);\n          imgElement.src = sizedImageUrl;\n          imgElement.srcset = \"\";\n        }\n      }\n      const priceContainer = containerElement.querySelector('[id^=\"cardPrice-\"]');\n      if (priceContainer) {\n        const priceMetaElement = priceContainer.querySelector('[itemprop=\"price\"]');\n        if (priceMetaElement) {\n          const formattedPrice = (selectedVariant.price / 100).toFixed(2);\n          priceMetaElement.content = formattedPrice;\n        }\n        const priceDisplay = priceContainer.querySelector(\"#productPrice\");\n        if (priceDisplay) {\n          const price = selectedVariant.price / 100;\n          const compareAtPrice = selectedVariant.compare_at_price ? selectedVariant.compare_at_price / 100 : null;\n          const priceWrapper = priceDisplay.querySelector(\"[data-variant-price]\");\n          const compareAtPriceWrapper = priceDisplay.querySelector(\"[data-price-compare]\");\n          const formatMoney = (cents) => {\n            return `$${cents.toFixed(2)}`;\n          };\n          if (compareAtPrice && compareAtPrice > price) {\n            compareAtPriceWrapper.innerHTML = formatMoney(price);\n          } else {\n            priceWrapper.innerHTML = formatMoney(price);\n          }\n        }\n      }\n      const availabilityMap = this.buildAvailabilityMap(variantData, selectedVariant);\n      const variantRadios = containerElement.querySelectorAll(\"variant-radios\");\n      variantRadios.forEach((radioGroup, index) => {\n        const optionValue = selectedVariant.options[index];\n        const radioInputs = radioGroup.querySelectorAll('input[type=\"radio\"]');\n        radioInputs.forEach((radio) => {\n          const isSelected = radio.value === optionValue;\n          const mapKey = `${index + 1}-${radio.value}`;\n          const isAvailable = availabilityMap[mapKey];\n          radio.checked = isSelected;\n          if (isSelected) {\n            radio.setAttribute(\"checked\", \"checked\");\n          } else {\n            radio.removeAttribute(\"checked\");\n          }\n          if (isAvailable) {\n            radio.removeAttribute(\"disabled\");\n            radio.disabled = false;\n          } else {\n            radio.setAttribute(\"disabled\", \"disabled\");\n            radio.disabled = true;\n          }\n          const label = radioGroup.querySelector(`label[for=\"${radio.id}\"]`);\n          if (label) {\n            if (isSelected) {\n              label.classList.add(\"border-current\");\n              label.classList.remove(\"border-transparent\");\n            } else {\n              label.classList.remove(\"border-current\");\n              label.classList.add(\"border-transparent\");\n            }\n            if (!isAvailable) {\n              label.classList.add(\"cursor-not-allowed\", \"text-light-text-color\", \"opacity-50\");\n              label.classList.remove(\"cursor-pointer\");\n            } else {\n              label.classList.remove(\"cursor-not-allowed\", \"text-light-text-color\", \"opacity-50\");\n              label.classList.add(\"cursor-pointer\");\n            }\n          }\n        });\n      });\n      const variantSelectElements = containerElement.querySelectorAll(\"variant-selects select\");\n      variantSelectElements.forEach((select, index) => {\n        const optionValue = selectedVariant.options[index];\n        select.value = optionValue;\n        Array.from(select.options).forEach((option) => {\n          if (option.value === optionValue) {\n            option.setAttribute(\"selected\", \"selected\");\n          } else {\n            option.removeAttribute(\"selected\");\n          }\n          const mapKey = `${index + 1}-${option.value}`;\n          const isAvailable = availabilityMap[mapKey];\n          if (isAvailable) {\n            option.removeAttribute(\"disabled\");\n            option.disabled = false;\n          } else {\n            option.setAttribute(\"disabled\", \"disabled\");\n            option.disabled = true;\n          }\n        });\n      });\n      const productLinks = containerElement.querySelectorAll('a[href*=\"/products/\"]');\n      productLinks.forEach((link) => {\n        const url = new URL(link.href);\n        url.searchParams.set(\"variant\", selectedVariant.id);\n        link.href = url.toString();\n      });\n      const event = new CustomEvent(\"section:updated\", {\n        bubbles: true,\n        detail: { container: containerElement }\n      });\n      containerElement.dispatchEvent(event);\n      return;\n    }\n    fetch(fetchUrl).then((response) => {\n      const contentType = response.headers.get(\"content-type\");\n      if (contentType && contentType.includes(\"application/json\")) {\n        return response.json().then((data) => {\n          return { type: \"json\", data };\n        });\n      } else {\n        return response.text().then((html) => {\n          return { type: \"html\", data: html };\n        });\n      }\n    }).then(({ type, data }) => {\n      let fetchedSection;\n      if (type === \"json\") {\n        const sectionHTML = data[sectionId];\n        if (!sectionHTML) {\n          const fallbackUrl = fetchUrl.replace(/&sections=[^&]*/, \"\");\n          return this.fetchAndReplace(fallbackUrl, section, containerElement, updateId, sectionId);\n        }\n        const parser = new DOMParser();\n        const tempDoc = parser.parseFromString(sectionHTML, \"text/html\");\n        fetchedSection = tempDoc.body.firstChild;\n      } else {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(data, \"text/html\");\n        fetchedSection = doc.querySelector(`#${section.id}`);\n      }\n      if (!fetchedSection) {\n        return;\n      }\n      const sizeRatio = fetchedSection.innerHTML.length / section.innerHTML.length;\n      if (sizeRatio < 0.8 && this.isPDP) {\n        const fallbackUrl = fetchUrl.replace(/&sections=[^&]*/, \"\");\n        return this.fetchAndReplace(fallbackUrl, section, containerElement, updateId, sectionId);\n      }\n      const selector = updateId ? `[data-product-update=\"${updateId}\"]` : \"[data-product-update]\";\n      const newContainer = fetchedSection.querySelector(selector);\n      if (!newContainer) {\n        return;\n      }\n      this.replaceDynamicElements(containerElement, newContainer);\n    }).catch((error) => {\n      console.error(\"Error updating section:\", error);\n    });\n  }\n  /**\n   * Replace all [data-dynamic-content] elements\n   * Preserves static wrapper to keep event listeners intact\n   */\n  replaceDynamicElements(containerElement, newContainer) {\n    const oldDynamicElements = containerElement.querySelectorAll(\"[data-dynamic-content]\");\n    const newDynamicElements = newContainer.querySelectorAll(\"[data-dynamic-content]\");\n    oldDynamicElements.forEach((oldElement, index) => {\n      const newElement = newDynamicElements[index];\n      if (newElement && oldElement.parentNode) {\n        const isImageGallery = oldElement.classList.contains(\"aspect-square\");\n        if (isImageGallery) {\n          const oldImg = oldElement.querySelector(\"img\");\n          const newImg = newElement.querySelector(\"img\");\n          if (oldImg && newImg && oldImg.src === newImg.src) {\n            return;\n          }\n        }\n        oldElement.parentNode.replaceChild(\n          document.importNode(newElement, true),\n          oldElement\n        );\n      }\n    });\n    const event = new CustomEvent(\"section:updated\", {\n      bubbles: true,\n      detail: { container: containerElement }\n    });\n    containerElement.dispatchEvent(event);\n  }\n}\nif (!customElements.get(\"variant-selects\")) {\n  customElements.define(\"variant-selects\", VariantSelects);\n}\nclass VariantRadios extends VariantSelects {\n  constructor() {\n    super();\n  }\n}\nif (!customElements.get(\"variant-radios\")) {\n  customElements.define(\"variant-radios\", VariantRadios);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/entrypoints/variantSelects.js\n\n}");

/***/ }),

/***/ "./src/styles/main.scss":
/*!******************************!*\
  !*** ./src/styles/main.scss ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("{__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzL21haW4uc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaG9waWZ5LXN0YXJ0ZXIvLi9zcmMvc3R5bGVzL21haW4uc2Nzcz81MTA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/styles/main.scss\n\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/entrypoints/variantSelects.js");
/******/ 	
/******/ })()
;