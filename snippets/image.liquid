{% comment %}
  Optimized Image Snippet
  
  Usage:
  {% render 'image',
    image: section.settings.image,
    alt: 'Description',
    width: 1200,
    ratio: '16/9',
    sizes: '(min-width: 1024px) 50vw, 100vw',
    loading: 'lazy',
    class: 'custom-class',
    fetchpriority: 'high'
  %}
{% endcomment %}

{% liquid
  comment
    Default parameters
  endcomment
  assign image_width = width | default: 1200
  assign image_loading = loading | default: 'lazy'
  assign image_class = class | default: ''
  assign image_sizes = sizes | default: '100vw'
  assign image_alt = alt | default: image.alt | default: ''

  comment
    Determine if this is an asset or schema image
  endcomment
  if image != blank
		comment
			If is a local asset in /assets
		endcomment
    assign is_asset = true
  else
    assign is_asset = false
    assign image = src
  endif

  comment
    Calculate aspect ratio dimensions if ratio is provided
    Ratio can be a decimal (0.75) or string (3/4)
  endcomment
  if ratio
    assign ratio_string = ratio | append: ''
    if ratio_string contains '/'
      assign ratio_parts = ratio | split: '/'
      assign ratio_width = ratio_parts[0] | times: 1.0
      assign ratio_height = ratio_parts[1] | times: 1.0
      assign aspect_ratio = ratio_width | divided_by: ratio_height
    else
      assign aspect_ratio = ratio | times: 1.0
    endif
  endif

  comment
    Define srcset widths for responsive images
  endcomment
  assign widths = '320,640,768,1024,1280,1536,1920,2048,2560'
  assign widths_array = widths | split: ','

  if layout != blank
    if layout == 'cover'
      assign object_fit = 'object-cover'
    endif
    if layout == 'contain'
      assign object_fit = 'object-contain'
    endif
  endif

  assign image_class = class
  if image_loading == 'lazy'
    assign image_class = image_class | append: ' opacity-0 transition-opacity duration-slow'
  endif

  if layout == 'cover' or layout == 'contain'
    assign image_class = image_class | append: ' ' | append: object_fit | append: ' absolute top-0 left-0 w-full h-full'
  endif
%}

<script type="text/javascript">
  function revealImage(event) {
    event.target.classList.remove('opacity-0');
  }
</script>

{% if image != blank %}
  <picture>
    {% if is_asset %}
      {%- comment -%} Asset-based image {%- endcomment -%}
      {%- liquid
        if ratio and aspect_ratio
          assign asset_height = image_width | divided_by: aspect_ratio | round
        else
          assign asset_height = image_width
        endif
      -%}
      <img
        src="{{ image | asset_url }}"
        alt="{{ image_alt | escape }}"
        width="{{ image_width }}"
        height="{{ asset_height }}"
        loading="{{ image_loading }}"
        {% if fetchpriority %}
          fetchpriority="{{ fetchpriority }}"
        {% endif %}
        {% if image_class != blank %}
          class="{{ image_class }}"
        {% endif %}
        decoding="async"
        {% if image_loading == 'lazy' %}
          onLoad="revealImage(event)"
        {% endif %}
      >
    {% else %}
      {%- comment -%} Schema/CDN image with srcset {%- endcomment -%}
      {%- liquid
        assign srcset_items = ''

        if ratio and aspect_ratio
          assign main_height = image_width | divided_by: aspect_ratio | round
        else
          assign main_height = image.height
        endif

        for width_item in widths_array
          assign current_width = width_item | times: 1
          if current_width <= image.width
            if ratio and aspect_ratio
              assign calculated_height = current_width | divided_by: aspect_ratio | round
              assign srcset_item = image | image_url: width: current_width, height: calculated_height | append: ' ' | append: current_width | append: 'w'
            else
              assign srcset_item = image | image_url: width: current_width | append: ' ' | append: current_width | append: 'w'
            endif

            if srcset_items != ''
              assign srcset_items = srcset_items | append: ', '
            endif
            assign srcset_items = srcset_items | append: srcset_item
          endif
        endfor
      -%}
      <img
        src="{{ image | image_url: width: image_width }}"
        srcset="{{ srcset_items }}"
        sizes="{{ image_sizes }}"
        alt="{{ image_alt | escape }}"
        width="{{ image_width }}"
        height="{{ main_height }}"
        loading="{{ image_loading }}"
        {% if fetchpriority %}
          fetchpriority="{{ fetchpriority }}"
        {% endif %}
        {% if image_class != blank %}
          class="{{ image_class }}"
        {% endif %}
        decoding="async"
        {% if image_loading == 'lazy' %}
          onLoad="revealImage(event)"
        {% endif %}
      >
    {% endif %}
  </picture>
{% endif %}